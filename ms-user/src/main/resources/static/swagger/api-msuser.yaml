openapi: 3.0.0
info:
  title: ms-user
  description: API description
  version: 1.0.0
servers:
  - url: http://localhost:8000
paths:
  /v1/users:
    post:
      summary: register user
      description: register user in database
      requestBody:
        required: true
        content:
          application/json:
            schema:
              example:
                user:
                  id: integer
                  firstName: name
                  lastName: name
                  cpf: string
                  birthdate: string
                  email: string
                  password: string
                  active: boolean
      responses:
        '201':
          description: Operation successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '400':
          description: Email or Cpf credentials already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /v1/login:
    post:
      summary: login user
      description: login user by credentials and return token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              example:
                loginPayloadDTO:
                  email: string
                  password: string

      responses:
        200:
          description: successfully login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string

        404:
          description: User not found in database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /v1/users/{id}:
    get:
      summary: get user
      description: get user by id and return user model
      parameters:
        - name: id
          in: path
          description: id for searching user in database
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Successful response
          content:
            application/json:
              example:
                user:
                  id: integer
                  firstName: name
                  lastName: name
                  cpf: string
                  birthdate: string
                  email: string
                  password: string
                  active: boolean
        404:
          description: user not found in database
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        500:
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    put:
      summary: update user
      description: Updates an existing order by its unique ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID to update.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                updatePayloadDTO:
                  type: object
                  properties:
                    firstName:
                      type: string
                    lastName:
                      type: string
                    cpf:
                      type: string
                    birthdate:
                      type: string
                    email:
                      type: string
      responses:
        200:
          description: Operation carried out successfully
          content:
            application/json:
              example:
                user:
                  id: integer
                  firstName: name
                  lastName: name
                  cpf: string
                  birthdate: string
                  email: string
                  password: string
                  active: boolean
        404:
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /v1/users/{id}/password:
    put:
      summary: update password
      description: update password by id and return model with password updated
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID to update.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                UpdatePasswordDTO:
                  type: object
                  properties:
                    password:
                      type: string
      responses:
        200:
          description: Operation carried out successfully
          content:
            application/json:
              example:
                user:
                  id: integer
                  firstName: name
                  lastName: name
                  cpf: string
                  birthdate: string
                  email: string
                  password: string
                  active: boolean
        404:
          description: user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'

components:
  schemas:
    ErrorModel:
      type: object
      properties:
        code:
          type: integer
        status:
          type: string
        message:
          type: string